function mesh = meshMakerTriM(input)
fileName = createMeshTri(input);
mesh=getTriMesh(fileName);
mesh.numTri = size(mesh.tri2node, 2);
mesh.numNode = size(mesh.node, 2);
% triplot(mesh.tri2node',mesh.node(1,:)',mesh.node(2,:)')
% mesh = calc_edge(mesh);
mesh.bdEdgeId = find(mesh.edgeMark~=0 & mesh.edgeMark~=1);
tmp = mesh.edge2node(:,mesh.bdEdgeId);
mesh.bdNodeId = unique(tmp(:));
%
% link mesh<-->input
mesh.mes_node = zeros(1,input.num_elec);
for i = 1:input.num_elec
   ind =  find(mesh.node(1,:)==input.elec_xz(i,1) ...
       & mesh.node(2,:)==input.elec_xz(i,2));
   mesh.mes_node(i) = ind;
end
% param
mean_rho = mean(input.real_data);
mesh.rho(1:mesh.numTri) = mean_rho;
end

%%
function filePath = createMeshTri(input)
min_x = min(input.elec_xz(:,1)); 
max_x = max(input.elec_xz(:,1));
if isempty(input.bore_elec)
    maxSpace = input.unit_a*input.n;
    depth = maxSpace/2;
else
    depth = abs(min(input.elec_xz(:,2)))+2*input.unit_a;
end
%            2       5
% 1*---------*-------*----------*6
%  |         |       |          |
%  |         |       |          |
%  |        3*-------*4         |
% 8*----------------------------*7
Dx = 3*input.unit_a;
point2 = [min_x-Dx,       0,                1];
point3 = [min_x-Dx,       0-depth,          0];
point4 = [max_x+Dx,       0-depth,          0];
point5 = [max_x+Dx,       0,                1];
L = max(abs(max_x-min_x),depth);
Lext = L*5;

point1 = [point2(1)-Lext, point2(2),     1];
point6 = [point5(1)+Lext, point5(2),     1];
point7 = [point6(1),      point6(2)-Lext,0];
point8 = [point1(1),      point1(2)-Lext,0];

% marker=99 is surface elec;
mark    = repmat(99,length(input.surf_elec),1);
point25 = [input.surf_elec mark];
% plus point
if ~isempty(input.bore_elec)
    % marker=999 is borehole elec;
    mark = repmat(999,length(input.bore_elec),1);
    bx = input.bore_elec(:,1); bz = input.bore_elec(:,2);
    bxz = [bx,bz,mark];
    mark = repmat(666,length(bx),1);
    bxlp = [bx-0.2,bz,mark];
    bxrp = [bx+0.2,bz,mark];
else
    bxz = []; bxlp=[]; bxrp=[];
end
% 加密地表
base = [point2(1:2); point25(:,1:2); point5(1:2)]';
xStep = abs(min(base(1,:))-max(base(1,:)))/(input.num_elec*3);
xi = min(base(1,:)):xStep:max(base(1,:));
zi = interp1(base(1,:),base(2,:),xi,'spline');
zi = zi-0.2;
mark = 666*ones(size(xi));
surfp = [xi',zi',mark'];
pointPlus = [bxz;bxlp;bxrp;surfp];

pointSet = [point1;point2;...
            point3;point4;...
            point5;point6;...
            point7;point8;...
            point25;pointPlus];
pidx = (1:length(pointSet))'-1;
pointSet = [pidx,pointSet];
% =======================================
% lines marker=0 1(top) 2(right) 3(bottom) 4(left)
xx = find(pointSet(:,4)==99);
if isempty(xx)
    line1 = [2 5 1];
else
    line1 = [2 xx(1) 1];
    tmpLine = [xx(1:end-1) xx(2:end) ones(size(xx(2:end)))];
    line1 = [line1;tmpLine];
    line1 = [line1;xx(end) 5 1];
end
line1 = [line1;5       4 0];
line1 = [line1;4       3 0];
line1 = [line1;3       2 0];
% line2
line2(1,:) = [1 2 1];
line2(2,:) = [2 3 0];
line2(3,:) = [3 4 0];
line2(4,:) = [4 5 0];
line2(5,:) = [5 6 1];
line2(6,:) = [6 7 2];
line2(7,:) = [7 8 3];
line2(8,:) = [8 1 4];
% line-plus
% xx = find(pointSet(:,4)==666);
% linePlus = [xx(1:end-1) xx(2:end) zeros(size(xx(2:end)))];
linePlus = [];  % 
% total lines
lines = [line1;line2;linePlus];
lines(:,[1,2]) = lines(:,[1,2])-1;
lidx = (1:length(lines))'-1;
lines = [lidx,lines];
% regions
rc1 = mean(pointSet([2,4],2:3),1);
rc1 = [0,rc1,1,input.unit_a];  %==>model region 
rc2 = mean(pointSet([1,7],2:3),1);
rc2 = [1,rc2,2,Lext];
regs = [rc1;rc2];
%============================
curentPath = pwd;
filePath = 'e:\matlabFfile\FEM-dc2D-ver01\triangleMake';
cd(filePath)
polyFile = 'xxxx.poly';
fid = fopen(polyFile,'w'); % 写入
% points
fprintf(fid,'%s\n','# points');
pheadr = [length(pointSet),2,0,1];
fprintf(fid,'%d %d %d %d\n',pheadr);
fprintf(fid,'%d %f %f %d\n',pointSet');
% lines
fprintf(fid,'%s\n','# lines');
lheader = [length(lines),1];
fprintf(fid,'%d %d\n',lheader);
fprintf(fid,'%d %d %d %d\n',lines');
% holes
fprintf(fid,'%s\n','# holes');
fprintf(fid,'%d\n',0);
% regions
regheader = 2;
fprintf(fid,'%s\n','# regions');
fprintf(fid,'%d\n',regheader);
fprintf(fid,'%d %f %f %d %f\n',regs');
fclose(fid);
system('triangle -pqAane xxxx.poly');
% system('triangle -pq34.2Aane xxxx.poly'); 
cd(curentPath)
filePath = [filePath,'\xxxx.1'];
% filePath = 'e:\matlabFfile\INV_DC_src_ver3\model&mesh\triangleMake\xxxx.1';
end
%%
function mesh = getTriMesh(filename)
% [p, t, v, marker] = getTriMesh(filename)
% reads in mesh files generated by Triangle.
%
% Output:
% =======
% p - 2 x np array (point table)
% t - 3 x ne array of element indices pointing into p
% v - 1 x ne array of subdomain numbers
% marker - 1 x np array of point markers

nodeFile = [filename '.node'];
elemFile = [filename '.ele' ];
%-----------------------------
fid = fopen(nodeFile, 'r');

slurp = fscanf(fid, '%i', [1 4]);
nNodes = slurp(1);
ncol = 3 + slurp(3) + slurp(4);

slurp = fscanf(fid, '%f', [ncol nNodes]);
p = slurp(2:ncol-1, :);
marker = slurp(ncol, :);
fclose(fid);
mesh.node = p;  
mesh.nodeMark = marker;
%-------------------------
fid = fopen(elemFile, 'r');

slurp = fscanf(fid, '%d', [1 3]);
nElem = slurp(1);
ncol = 4 + slurp(3);

slurp = fscanf(fid, '%f', [ncol nElem]);
T_ = slurp(1:ncol, :);
    
t = T_(2:4, :);
if T_(1,1) == 0  
    t = t + 1; % 编号按1起算
end
v = T_(5, :);
fclose(fid);
mesh.tri2node = t; 
mesh.subdm=v;
%--------------------------
% neighbors
neighFile = [filename '.neigh' ];
fid = fopen(neighFile, 'r');
slurp = fscanf(fid, '%d', [1 2]);
nElem = slurp(1);
ncol = slurp(2)+1;
slurp = fscanf(fid, '%f', [ncol nElem]);
fclose(fid);
neigh = slurp(2:end,:);
if ismember(0,neigh)
    neigh = neigh+1;
end
mesh.neigh2tri = neigh;
%----------------------------
edgeFile = [filename '.edge' ];
fid = fopen(edgeFile, 'r');
slurp = fscanf(fid, '%d', [1 2]);
nElem = slurp(1);
ncol = 4;
slurp = fscanf(fid, '%f', [ncol nElem]);
fclose(fid);
edge = slurp(2:3,:);
if ismember(0,edge)
   edge = edge+1; 
end
mesh.edge2node = edge;
mesh.edgeMark = slurp(end,:);
end


